<svg width="2000" height="2400" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .actor { fill: #e8f5e8; stroke: #2e7d32; stroke-width: 2; }
      .actor-text { fill: #1b5e20; font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; text-anchor: middle; }
      .lifeline { stroke: #616161; stroke-width: 2; stroke-dasharray: 8,4; }
      .activation { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; }
      .message { stroke: #1976d2; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .return-message { stroke: #388e3c; stroke-width: 2; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 6,3; }
      .self-message { stroke: #7b1fa2; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .message-text { fill: #212121; font-family: Arial, sans-serif; font-size: 10px; font-weight: 500; }
      .title { fill: #1a237e; font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; text-anchor: middle; }
      .subtitle { fill: #424242; font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; }
      .note { fill: #f3e5f5; stroke: #7b1fa2; stroke-width: 1; }
      .note-text { fill: #4a148c; font-family: Arial, sans-serif; font-size: 9px; }
      .error-box { fill: #ffebee; stroke: #d32f2f; stroke-width: 2; }
      .success-box { fill: #e8f5e8; stroke: #2e7d32; stroke-width: 2; }
      .process-box { fill: #e3f2fd; stroke: #1976d2; stroke-width: 2; }
      .separator { stroke: #9e9e9e; stroke-width: 1; stroke-dasharray: 10,5; }
    </style>
    <defs>
      <marker id="arrowhead" markerWidth="12" markerHeight="8" refX="11" refY="4" orient="auto">
        <polygon points="0 0, 12 4, 0 8" fill="#1976d2"/>
      </marker>
    </defs>
  </defs>
  
  <!-- Title -->
  <text x="1000" y="30" class="title">Sequence Diagrams - Akudihatinya System (Enhanced)</text>
  <text x="1000" y="50" style="fill: #666; font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle;">Comprehensive System Interaction Flows</text>
  
  <!-- Sequence Diagram 1: User Authentication Flow -->
  <text x="350" y="90" class="subtitle">1. User Authentication &amp; Token Management</text>
  
  <!-- Actors for Authentication -->
  <rect x="50" y="110" width="100" height="45" class="actor" rx="5"/>
  <text x="100" y="135" class="actor-text">User</text>
  <text x="100" y="148" style="fill: #666; font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle;">(Admin/Petugas)</text>
  
  <rect x="200" y="110" width="100" height="45" class="actor" rx="5"/>
  <text x="250" y="135" class="actor-text">Frontend</text>
  <text x="250" y="148" style="fill: #666; font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle;">(React/Vue)</text>
  
  <rect x="350" y="110" width="100" height="45" class="actor" rx="5"/>
  <text x="400" y="135" class="actor-text">AuthController</text>
  <text x="400" y="148" style="fill: #666; font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle;">(Laravel)</text>
  
  <rect x="500" y="110" width="100" height="45" class="actor" rx="5"/>
  <text x="550" y="135" class="actor-text">Sanctum</text>
  <text x="550" y="148" style="fill: #666; font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle;">(Auth Service)</text>
  
  <rect x="650" y="110" width="100" height="45" class="actor" rx="5"/>
  <text x="700" y="135" class="actor-text">Database</text>
  <text x="700" y="148" style="fill: #666; font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle;">(MySQL)</text>
  
  <!-- Lifelines for Authentication -->
  <line x1="100" y1="155" x2="100" y2="480" class="lifeline"/>
  <line x1="250" y1="155" x2="250" y2="480" class="lifeline"/>
  <line x1="400" y1="155" x2="400" y2="480" class="lifeline"/>
  <line x1="550" y1="155" x2="550" y2="480" class="lifeline"/>
  <line x1="700" y1="155" x2="700" y2="480" class="lifeline"/>
  
  <!-- Activations for Authentication -->
  <rect x="245" y="180" width="10" height="280" class="activation"/>
  <rect x="395" y="200" width="10" height="240" class="activation"/>
  <rect x="545" y="240" width="10" height="120" class="activation"/>
  <rect x="695" y="260" width="10" height="80" class="activation"/>
  
  <!-- Messages for Authentication -->
  <line x1="100" y1="190" x2="245" y2="190" class="message"/>
  <text x="172" y="185" class="message-text">1: submitLogin(email, password)</text>
  
  <line x1="255" y1="210" x2="395" y2="210" class="message"/>
  <text x="325" y="205" class="message-text">2: POST /api/login</text>
  
  <!-- Input Validation -->
  <rect x="420" y="225" width="120" height="25" class="process-box" rx="3"/>
  <text x="480" y="242" class="message-text" text-anchor="middle">3: validateRequest()</text>
  
  <line x1="405" y1="260" x2="545" y2="260" class="message"/>
  <text x="475" y="255" class="message-text">4: attempt(credentials)</text>
  
  <line x1="555" y1="280" x2="695" y2="280" class="message"/>
  <text x="625" y="275" class="message-text">5: findUser(email)</text>
  
  <line x1="695" y1="300" x2="555" y2="300" class="return-message"/>
  <text x="625" y="295" class="message-text">6: user data</text>
  
  <!-- Password Verification -->
  <rect x="570" y="315" width="100" height="25" class="process-box" rx="3"/>
  <text x="620" y="332" class="message-text" text-anchor="middle">7: verifyPassword()</text>
  
  <line x1="555" y1="350" x2="395" y2="350" class="return-message"/>
  <text x="475" y="345" class="message-text">8: authentication result</text>
  
  <!-- Token Generation -->
  <rect x="420" y="365" width="120" height="25" class="process-box" rx="3"/>
  <text x="480" y="382" class="message-text" text-anchor="middle">9: createToken(user)</text>
  
  <line x1="395" y1="400" x2="255" y2="400" class="return-message"/>
  <text x="325" y="395" class="message-text">10: {token, user, permissions}</text>
  
  <line x1="245" y1="420" x2="100" y2="420" class="return-message"/>
  <text x="172" y="415" class="message-text">11: loginSuccess</text>
  
  <!-- Success/Error Handling -->
  <rect x="50" y="440" width="100" height="25" class="success-box" rx="3"/>
  <text x="100" y="457" class="message-text" text-anchor="middle">12: redirectToDashboard()</text>
  
  <!-- Note for Authentication -->
  <rect x="780" y="200" width="140" height="80" class="note"/>
  <text x="850" y="220" class="note-text" text-anchor="middle" font-weight="bold">Laravel Sanctum Features:</text>
  <text x="850" y="235" class="note-text" text-anchor="middle">• Token-based auth</text>
  <text x="850" y="250" class="note-text" text-anchor="middle">• Role-based access</text>
  <text x="850" y="265" class="note-text" text-anchor="middle">• Automatic expiration</text>
  
  <!-- Separator -->
  <line x1="50" y1="520" x2="950" y2="520" class="separator"/>
  
  <!-- Sequence Diagram 2: Patient Registration with Validation -->
  <text x="350" y="560" class="subtitle">2. Patient Registration with Advanced Validation</text>
  
  <!-- Actors for Patient Registration -->
  <rect x="50" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="100" y="605" class="actor-text">Petugas</text>
  <text x="100" y="618" style="fill: #666; font-family: Arial, sans-serif; font-size: 9px; text-anchor: middle;">Puskesmas</text>
  
  <rect x="200" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="250" y="605" class="actor-text">Frontend</text>
  
  <rect x="350" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="400" y="605" class="actor-text">PatientController</text>
  
  <rect x="500" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="550" y="605" class="actor-text">PatientService</text>
  
  <rect x="650" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="700" y="605" class="actor-text">Validation</text>
  
  <rect x="800" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="850" y="605" class="actor-text">Database</text>
  
  <!-- Lifelines for Patient Registration -->
  <line x1="100" y1="625" x2="100" y2="950" class="lifeline"/>
  <line x1="250" y1="625" x2="250" y2="950" class="lifeline"/>
  <line x1="400" y1="625" x2="400" y2="950" class="lifeline"/>
  <line x1="550" y1="625" x2="550" y2="950" class="lifeline"/>
  <line x1="700" y1="625" x2="700" y2="950" class="lifeline"/>
  <line x1="850" y1="625" x2="850" y2="950" class="lifeline"/>
  
  <!-- Activations for Patient Registration -->
  <rect x="245" y="650" width="10" height="280" class="activation"/>
  <rect x="395" y="670" width="10" height="240" class="activation"/>
  <rect x="545" y="690" width="10" height="200" class="activation"/>
  <rect x="695" y="710" width="10" height="80" class="activation"/>
  <rect x="845" y="820" width="10" height="60" class="activation"/>
  
  <!-- Messages for Patient Registration -->
  <line x1="100" y1="660" x2="245" y2="660" class="message"/>
  <text x="172" y="655" class="message-text">1: fillPatientForm(data)</text>
  
  <line x1="255" y1="680" x2="395" y2="680" class="message"/>
  <text x="325" y="675" class="message-text">2: POST /api/patients</text>
  
  <line x1="405" y1="700" x2="545" y2="700" class="message"/>
  <text x="475" y="695" class="message-text">3: createPatient(data)</text>
  
  <!-- Validation Process -->
  <line x1="555" y1="720" x2="695" y2="720" class="message"/>
  <text x="625" y="715" class="message-text">4: validatePatientData()</text>
  
  <rect x="720" y="735" width="120" height="25" class="process-box" rx="3"/>
  <text x="780" y="752" class="message-text" text-anchor="middle">5: checkDuplicateNIK()</text>
  
  <line x1="695" y1="770" x2="555" y2="770" class="return-message"/>
  <text x="625" y="765" class="message-text">6: validation passed</text>
  
  <!-- Patient ID Generation -->
  <rect x="570" y="785" width="100" height="25" class="process-box" rx="3"/>
  <text x="620" y="802" class="message-text" text-anchor="middle">7: generatePatientID()</text>
  
  <line x1="555" y1="830" x2="845" y2="830" class="message"/>
  <text x="700" y="825" class="message-text">8: save(patient)</text>
  
  <line x1="845" y1="850" x2="555" y2="850" class="return-message"/>
  <text x="700" y="845" class="message-text">9: patient_id</text>
  
  <line x1="545" y1="870" x2="395" y2="870" class="return-message"/>
  <text x="470" y="865" class="message-text">10: patient object</text>
  
  <line x1="395" y1="890" x2="245" y2="890" class="return-message"/>
  <text x="320" y="885" class="message-text">11: success response</text>
  
  <line x1="245" y1="910" x2="100" y2="910" class="return-message"/>
  <text x="172" y="905" class="message-text">12: registrationSuccess</text>
  
  <!-- Success Notification -->
  <rect x="50" y="925" width="100" height="25" class="success-box" rx="3"/>
  <text x="100" y="942" class="message-text" text-anchor="middle">13: showSuccessMessage()</text>
  
  <!-- Note for Patient Registration -->
  <rect x="950" y="650" width="140" height="100" class="note"/>
  <text x="1020" y="670" class="note-text" text-anchor="middle" font-weight="bold">Validation Rules:</text>
  <text x="1020" y="685" class="note-text" text-anchor="middle">• NIK uniqueness</text>
  <text x="1020" y="700" class="note-text" text-anchor="middle">• Required fields</text>
  <text x="1020" y="715" class="note-text" text-anchor="middle">• Format validation</text>
  <text x="1020" y="730" class="note-text" text-anchor="middle">• Age constraints</text>
  
  <!-- Separator -->
  <line x1="50" y1="990" x2="1100" y2="990" class="separator"/>
  
  <!-- Sequence Diagram 3: HT Examination with Control Calculation -->
  <text x="600" y="1030" class="subtitle">3. HT Examination Recording &amp; Control Calculation</text>
  
  <!-- Actors for HT Examination -->
  <rect x="1150" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="1200" y="605" class="actor-text">Petugas</text>
  
  <rect x="1300" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="1350" y="605" class="actor-text">Frontend</text>
  
  <rect x="1450" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="1500" y="605" class="actor-text">HTController</text>
  
  <rect x="1600" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="1650" y="605" class="actor-text">HTService</text>
  
  <rect x="1750" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="1800" y="605" class="actor-text">Statistics</text>
  
  <rect x="1900" y="580" width="100" height="45" class="actor" rx="5"/>
  <text x="1950" y="605" class="actor-text">Database</text>
  
  <!-- Lifelines for HT Examination -->
  <line x1="1200" y1="625" x2="1200" y2="950" class="lifeline"/>
  <line x1="1350" y1="625" x2="1350" y2="950" class="lifeline"/>
  <line x1="1500" y1="625" x2="1500" y2="950" class="lifeline"/>
  <line x1="1650" y1="625" x2="1650" y2="950" class="lifeline"/>
  <line x1="1800" y1="625" x2="1800" y2="950" class="lifeline"/>
  <line x1="1950" y1="625" x2="1950" y2="950" class="lifeline"/>
  
  <!-- Activations for HT Examination -->
  <rect x="1345" y="650" width="10" height="280" class="activation"/>
  <rect x="1495" y="670" width="10" height="240" class="activation"/>
  <rect x="1645" y="690" width="10" height="200" class="activation"/>
  <rect x="1795" y="820" width="10" height="60" class="activation"/>
  <rect x="1945" y="750" width="10" height="100" class="activation"/>
  
  <!-- Messages for HT Examination -->
  <line x1="1200" y1="660" x2="1345" y2="660" class="message"/>
  <text x="1272" y="655" class="message-text">1: recordHTExam(data)</text>
  
  <line x1="1355" y1="680" x2="1495" y2="680" class="message"/>
  <text x="1425" y="675" class="message-text">2: POST /api/ht-examinations</text>
  
  <line x1="1505" y1="700" x2="1645" y2="700" class="message"/>
  <text x="1575" y="695" class="message-text">3: createExamination(data)</text>
  
  <!-- BP Validation -->
  <rect x="1670" y="715" width="120" height="25" class="process-box" rx="3"/>
  <text x="1730" y="732" class="message-text" text-anchor="middle">4: validateBPValues()</text>
  
  <line x1="1655" y1="760" x2="1945" y2="760" class="message"/>
  <text x="1800" y="755" class="message-text">5: save(examination)</text>
  
  <!-- Control Calculation -->
  <rect x="1670" y="775" width="120" height="25" class="process-box" rx="3"/>
  <text x="1730" y="792" class="message-text" text-anchor="middle">6: calculateBPControl()</text>
  
  <line x1="1655" y1="810" x2="1795" y2="810" class="message"/>
  <text x="1725" y="805" class="message-text">7: updateStatistics()</text>
  
  <line x1="1945" y1="830" x2="1655" y2="830" class="return-message"/>
  <text x="1800" y="825" class="message-text">8: examination_id</text>
  
  <line x1="1795" y1="850" x2="1655" y2="850" class="return-message"/>
  <text x="1725" y="845" class="message-text">9: stats updated</text>
  
  <line x1="1645" y1="870" x2="1505" y2="870" class="return-message"/>
  <text x="1575" y="865" class="message-text">10: examination object</text>
  
  <line x1="1495" y1="890" x2="1355" y2="890" class="return-message"/>
  <text x="1425" y="885" class="message-text">11: success response</text>
  
  <line x1="1345" y1="910" x2="1200" y2="910" class="return-message"/>
  <text x="1272" y="905" class="message-text">12: examRecorded</text>
  
  <!-- Note for HT Control -->
  <rect x="1150" y="750" width="140" height="80" class="note"/>
  <text x="1220" y="770" class="note-text" text-anchor="middle" font-weight="bold">BP Control Logic:</text>
  <text x="1220" y="785" class="note-text" text-anchor="middle">Controlled if:</text>
  <text x="1220" y="800" class="note-text" text-anchor="middle">Systolic &lt; 140 AND</text>
  <text x="1220" y="815" class="note-text" text-anchor="middle">Diastolic &lt; 90</text>
  
  <!-- Separator -->
  <line x1="1150" y1="990" x2="2000" y2="990" class="separator"/>
  
  <!-- Sequence Diagram 4: Dashboard Statistics with Caching -->
  <text x="600" y="1070" class="subtitle">4. Dashboard Statistics with Advanced Caching</text>
  
  <!-- Actors for Dashboard Statistics -->
  <rect x="50" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="100" y="1115" class="actor-text">Admin</text>
  
  <rect x="200" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="250" y="1115" class="actor-text">Frontend</text>
  
  <rect x="350" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="400" y="1115" class="actor-text">StatsController</text>
  
  <rect x="500" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="550" y="1115" class="actor-text">CacheService</text>
  
  <rect x="650" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="700" y="1115" class="actor-text">StatsService</text>
  
  <rect x="800" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="850" y="1115" class="actor-text">Database</text>
  
  <!-- Lifelines for Dashboard Statistics -->
  <line x1="100" y1="1135" x2="100" y2="1500" class="lifeline"/>
  <line x1="250" y1="1135" x2="250" y2="1500" class="lifeline"/>
  <line x1="400" y1="1135" x2="400" y2="1500" class="lifeline"/>
  <line x1="550" y1="1135" x2="550" y2="1500" class="lifeline"/>
  <line x1="700" y1="1135" x2="700" y2="1500" class="lifeline"/>
  <line x1="850" y1="1135" x2="850" y2="1500" class="lifeline"/>
  
  <!-- Activations for Dashboard Statistics -->
  <rect x="245" y="1160" width="10" height="320" class="activation"/>
  <rect x="395" y="1180" width="10" height="280" class="activation"/>
  <rect x="545" y="1200" width="10" height="120" class="activation"/>
  <rect x="695" y="1340" width="10" height="100" class="activation"/>
  <rect x="845" y="1360" width="10" height="60" class="activation"/>
  
  <!-- Messages for Dashboard Statistics -->
  <line x1="100" y1="1170" x2="245" y2="1170" class="message"/>
  <text x="172" y="1165" class="message-text">1: loadDashboard()</text>
  
  <line x1="255" y1="1190" x2="395" y2="1190" class="message"/>
  <text x="325" y="1185" class="message-text">2: GET /api/statistics/admin</text>
  
  <line x1="405" y1="1210" x2="545" y2="1210" class="message"/>
  <text x="475" y="1205" class="message-text">3: checkCache(key)</text>
  
  <!-- Cache Decision -->
  <rect x="570" y="1225" width="100" height="25" class="process-box" rx="3"/>
  <text x="620" y="1242" class="message-text" text-anchor="middle">4: cache validation</text>
  
  <line x1="545" y1="1260" x2="405" y2="1260" class="return-message"/>
  <text x="475" y="1255" class="message-text">5: cache miss</text>
  
  <!-- Data Aggregation -->
  <rect x="420" y="1275" width="120" height="25" class="process-box" rx="3"/>
  <text x="480" y="1292" class="message-text" text-anchor="middle">6: getFastDashboardStats()</text>
  
  <line x1="405" y1="1310" x2="545" y2="1310" class="message"/>
  <text x="475" y="1305" class="message-text">7: generateCacheKey()</text>
  
  <line x1="405" y1="1350" x2="695" y2="1350" class="message"/>
  <text x="550" y="1345" class="message-text">8: aggregateData(filters)</text>
  
  <line x1="705" y1="1370" x2="845" y2="1370" class="message"/>
  <text x="775" y="1365" class="message-text">9: complexQuery()</text>
  
  <line x1="845" y1="1390" x2="705" y2="1390" class="return-message"/>
  <text x="775" y="1385" class="message-text">10: raw data</text>
  
  <line x1="695" y1="1410" x2="405" y2="1410" class="return-message"/>
  <text x="550" y="1405" class="message-text">11: processed statistics</text>
  
  <!-- Cache Storage -->
  <line x1="405" y1="1430" x2="545" y2="1430" class="message"/>
  <text x="475" y="1425" class="message-text">12: storeCache(key, data, ttl)</text>
  
  <line x1="395" y1="1450" x2="255" y2="1450" class="return-message"/>
  <text x="325" y="1445" class="message-text">13: formatted response</text>
  
  <line x1="245" y1="1470" x2="100" y2="1470" class="return-message"/>
  <text x="172" y="1465" class="message-text">14: dashboard data</text>
  
  <!-- Note for Caching Strategy -->
  <rect x="950" y="1200" width="140" height="100" class="note"/>
  <text x="1020" y="1220" class="note-text" text-anchor="middle" font-weight="bold">Caching Strategy:</text>
  <text x="1020" y="1235" class="note-text" text-anchor="middle">• Redis backend</text>
  <text x="1020" y="1250" class="note-text" text-anchor="middle">• 15-minute TTL</text>
  <text x="1020" y="1265" class="note-text" text-anchor="middle">• Key-based invalidation</text>
  <text x="1020" y="1280" class="note-text" text-anchor="middle">• Performance optimization</text>
  
  <!-- Separator -->
  <line x1="50" y1="1540" x2="1100" y2="1540" class="separator"/>
  
  <!-- Sequence Diagram 5: Report Export with File Management -->
  <text x="600" y="1580" class="subtitle">5. Report Export with Advanced File Management</text>
  
  <!-- Actors for Report Export -->
  <rect x="1150" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="1200" y="1115" class="actor-text">User</text>
  
  <rect x="1300" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="1350" y="1115" class="actor-text">Frontend</text>
  
  <rect x="1450" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="1500" y="1115" class="actor-text">ExportController</text>
  
  <rect x="1600" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="1650" y="1115" class="actor-text">ExportService</text>
  
  <rect x="1750" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="1800" y="1115" class="actor-text">FileSystem</text>
  
  <rect x="1900" y="1090" width="100" height="45" class="actor" rx="5"/>
  <text x="1950" y="1115" class="actor-text">Database</text>
  
  <!-- Lifelines for Report Export -->
  <line x1="1200" y1="1135" x2="1200" y2="1500" class="lifeline"/>
  <line x1="1350" y1="1135" x2="1350" y2="1500" class="lifeline"/>
  <line x1="1500" y1="1135" x2="1500" y2="1500" class="lifeline"/>
  <line x1="1650" y1="1135" x2="1650" y2="1500" class="lifeline"/>
  <line x1="1800" y1="1135" x2="1800" y2="1500" class="lifeline"/>
  <line x1="1950" y1="1135" x2="1950" y2="1500" class="lifeline"/>
  
  <!-- Activations for Report Export -->
  <rect x="1345" y="1160" width="10" height="320" class="activation"/>
  <rect x="1495" y="1180" width="10" height="280" class="activation"/>
  <rect x="1645" y="1200" width="10" height="240" class="activation"/>
  <rect x="1795" y="1340" width="10" height="80" class="activation"/>
  <rect x="1945" y="1240" width="10" height="80" class="activation"/>
  
  <!-- Messages for Report Export -->
  <line x1="1200" y1="1170" x2="1345" y2="1170" class="message"/>
  <text x="1272" y="1165" class="message-text">1: requestExport(type, filters)</text>
  
  <line x1="1355" y1="1190" x2="1495" y2="1190" class="message"/>
  <text x="1425" y="1185" class="message-text">2: POST /api/export</text>
  
  <line x1="1505" y1="1210" x2="1645" y2="1210" class="message"/>
  <text x="1575" y="1205" class="message-text">3: generateReport(params)</text>
  
  <!-- Validation -->
  <rect x="1670" y="1225" width="120" height="25" class="process-box" rx="3"/>
  <text x="1730" y="1242" class="message-text" text-anchor="middle">4: validateRequest()</text>
  
  <line x1="1655" y1="1260" x2="1945" y2="1260" class="message"/>
  <text x="1800" y="1255" class="message-text">5: fetchData(filters)</text>
  
  <line x1="1945" y1="1280" x2="1655" y2="1280" class="return-message"/>
  <text x="1800" y="1275" class="message-text">6: raw data</text>
  
  <!-- Data Processing -->
  <rect x="1670" y="1295" width="120" height="25" class="process-box" rx="3"/>
  <text x="1730" y="1312" class="message-text" text-anchor="middle">7: processData()</text>
  
  <line x1="1655" y1="1350" x2="1795" y2="1350" class="message"/>
  <text x="1725" y="1345" class="message-text">8: saveFile(filename, content)</text>
  
  <line x1="1795" y1="1370" x2="1655" y2="1370" class="return-message"/>
  <text x="1725" y="1365" class="message-text">9: file path</text>
  
  <!-- File Management -->
  <rect x="1670" y="1385" width="120" height="25" class="process-box" rx="3"/>
  <text x="1730" y="1402" class="message-text" text-anchor="middle">10: generateDownloadLink()</text>
  
  <line x1="1645" y1="1420" x2="1505" y2="1420" class="return-message"/>
  <text x="1575" y="1415" class="message-text">11: download URL</text>
  
  <line x1="1495" y1="1440" x2="1355" y2="1440" class="return-message"/>
  <text x="1425" y="1435" class="message-text">12: export response</text>
  
  <line x1="1345" y1="1460" x2="1200" y2="1460" class="return-message"/>
  <text x="1272" y="1455" class="message-text">13: downloadReady</text>
  
  <!-- Note for Export Formats -->
  <rect x="1150" y="1300" width="140" height="100" class="note"/>
  <text x="1220" y="1320" class="note-text" text-anchor="middle" font-weight="bold">Export Formats:</text>
  <text x="1220" y="1335" class="note-text" text-anchor="middle">• PDF Reports</text>
  <text x="1220" y="1350" class="note-text" text-anchor="middle">• Excel Spreadsheets</text>
  <text x="1220" y="1365" class="note-text" text-anchor="middle">• CSV Data Files</text>
  <text x="1220" y="1380" class="note-text" text-anchor="middle">• Archive Management</text>
  
  <!-- Separator -->
  <line x1="1150" y1="1540" x2="2000" y2="1540" class="separator"/>
  
  <!-- Sequence Diagram 6: DM Examination with Complex Validation -->
  <text x="600" y="1620" class="subtitle">6. DM Examination with Complex Glucose Validation</text>
  
  <!-- Actors for DM Examination -->
  <rect x="50" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="100" y="1665" class="actor-text">Petugas</text>
  
  <rect x="200" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="250" y="1665" class="actor-text">Frontend</text>
  
  <rect x="350" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="400" y="1665" class="actor-text">DMController</text>
  
  <rect x="500" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="550" y="1665" class="actor-text">DMService</text>
  
  <rect x="650" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="700" y="1665" class="actor-text">Validation</text>
  
  <rect x="800" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="850" y="1665" class="actor-text">Statistics</text>
  
  <rect x="950" y="1640" width="100" height="45" class="actor" rx="5"/>
  <text x="1000" y="1665" class="actor-text">Database</text>
  
  <!-- Lifelines for DM Examination -->
  <line x1="100" y1="1685" x2="100" y2="2050" class="lifeline"/>
  <line x1="250" y1="1685" x2="250" y2="2050" class="lifeline"/>
  <line x1="400" y1="1685" x2="400" y2="2050" class="lifeline"/>
  <line x1="550" y1="1685" x2="550" y2="2050" class="lifeline"/>
  <line x1="700" y1="1685" x2="700" y2="2050" class="lifeline"/>
  <line x1="850" y1="1685" x2="850" y2="2050" class="lifeline"/>
  <line x1="1000" y1="1685" x2="1000" y2="2050" class="lifeline"/>
  
  <!-- Activations for DM Examination -->
  <rect x="245" y="1710" width="10" height="320" class="activation"/>
  <rect x="395" y="1730" width="10" height="280" class="activation"/>
  <rect x="545" y="1750" width="10" height="240" class="activation"/>
  <rect x="695" y="1770" width="10" height="100" class="activation"/>
  <rect x="845" y="1920" width="10" height="60" class="activation"/>
  <rect x="995" y="1850" width="10" height="80" class="activation"/>
  
  <!-- Messages for DM Examination -->
  <line x1="100" y1="1720" x2="245" y2="1720" class="message"/>
  <text x="172" y="1715" class="message-text">1: recordDMExam(data)</text>
  
  <line x1="255" y1="1740" x2="395" y2="1740" class="message"/>
  <text x="325" y="1735" class="message-text">2: POST /api/dm-examinations</text>
  
  <line x1="405" y1="1760" x2="545" y2="1760" class="message"/>
  <text x="475" y="1755" class="message-text">3: createExamination(data)</text>
  
  <!-- Complex Validation -->
  <line x1="555" y1="1780" x2="695" y2="1780" class="message"/>
  <text x="625" y="1775" class="message-text">4: validateGlucoseValues()</text>
  
  <rect x="720" y="1795" width="120" height="25" class="process-box" rx="3"/>
  <text x="780" y="1812" class="message-text" text-anchor="middle">5: checkGlucoseType()</text>
  
  <rect x="720" y="1825" width="120" height="25" class="process-box" rx="3"/>
  <text x="780" y="1842" class="message-text" text-anchor="middle">6: validateHbA1c()</text>
  
  <line x1="695" y1="1860" x2="555" y2="1860" class="return-message"/>
  <text x="625" y="1855" class="message-text">7: validation passed</text>
  
  <line x1="555" y1="1880" x2="995" y2="1880" class="message"/>
  <text x="775" y="1875" class="message-text">8: save(examination)</text>
  
  <!-- Control Calculation -->
  <rect x="570" y="1895" width="120" height="25" class="process-box" rx="3"/>
  <text x="630" y="1912" class="message-text" text-anchor="middle">9: calculateDMControl()</text>
  
  <line x1="555" y1="1930" x2="845" y2="1930" class="message"/>
  <text x="700" y="1925" class="message-text">10: updateStatistics()</text>
  
  <line x1="995" y1="1950" x2="555" y2="1950" class="return-message"/>
  <text x="775" y="1945" class="message-text">11: examination_id</text>
  
  <line x1="845" y1="1970" x2="555" y2="1970" class="return-message"/>
  <text x="700" y="1965" class="message-text">12: stats updated</text>
  
  <line x1="545" y1="1990" x2="395" y2="1990" class="return-message"/>
  <text x="470" y="1985" class="message-text">13: examination object</text>
  
  <line x1="395" y1="2010" x2="245" y2="2010" class="return-message"/>
  <text x="320" y="2005" class="message-text">14: success response</text>
  
  <line x1="245" y1="2030" x2="100" y2="2030" class="return-message"/>
  <text x="172" y="2025" class="message-text">15: examRecorded</text>
  
  <!-- Note for DM Control -->
  <rect x="1150" y="1750" width="140" height="120" class="note"/>
  <text x="1220" y="1770" class="note-text" text-anchor="middle" font-weight="bold">DM Control Logic:</text>
  <text x="1220" y="1785" class="note-text" text-anchor="middle">Blood Sugar Types:</text>
  <text x="1220" y="1800" class="note-text" text-anchor="middle">• Fasting &lt; 126 mg/dL</text>
  <text x="1220" y="1815" class="note-text" text-anchor="middle">• Random &lt; 200 mg/dL</text>
  <text x="1220" y="1830" class="note-text" text-anchor="middle">• Post-meal &lt; 200 mg/dL</text>
  <text x="1220" y="1845" class="note-text" text-anchor="middle">HbA1c &lt; 7%</text>
  
  <!-- Legend -->
  <rect x="50" y="2100" width="1000" height="200" fill="#f5f5f5" stroke="#424242" stroke-width="1"/>
  <text x="550" y="2120" text-anchor="middle" style="fill: #424242; font-family: Arial, sans-serif; font-size: 14px; font-weight: bold;">Enhanced Sequence Diagram Legend</text>
  
  <rect x="80" y="2140" width="80" height="30" class="actor" rx="3"/>
  <text x="180" y="2160" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Actor/Component</text>
  
  <line x1="80" y1="2180" x2="80" y2="2220" class="lifeline"/>
  <text x="100" y="2205" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Lifeline</text>
  
  <rect x="200" y="2180" width="8" height="40" class="activation"/>
  <text x="220" y="2205" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Activation Box</text>
  
  <line x1="300" y1="2190" x2="380" y2="2190" class="message"/>
  <text x="400" y="2195" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Synchronous Message</text>
  
  <line x1="300" y1="2210" x2="380" y2="2210" class="return-message"/>
  <text x="400" y="2215" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Return Message</text>
  
  <rect x="500" y="2180" width="80" height="20" class="process-box" rx="3"/>
  <text x="600" y="2195" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Process/Calculation</text>
  
  <rect x="500" y="2210" width="80" height="20" class="note" rx="3"/>
  <text x="600" y="2225" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Note/Comment</text>
  
  <rect x="700" y="2180" width="80" height="20" class="success-box" rx="3"/>
  <text x="800" y="2195" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Success State</text>
  
  <rect x="700" y="2210" width="80" height="20" class="error-box" rx="3"/>
  <text x="800" y="2225" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Error State</text>
  
  <line x1="50" y1="2250" x2="1050" y2="2250" class="separator"/>
  <text x="100" y="2270" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Section Separator</text>
  
  <!-- Summary -->
  <text x="1000" y="2350" text-anchor="middle" style="fill: #1a237e; font-family: Arial, sans-serif; font-size: 14px; font-weight: bold;">Enhanced Sequence Diagrams Summary</text>
  <text x="1000" y="2370" text-anchor="middle" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Total Sequences: 6 | Enhanced Features: Validation, Caching, Error Handling, Statistics Integration</text>
  <text x="1000" y="2390" text-anchor="middle" style="fill: #424242; font-family: Arial, sans-serif; font-size: 11px;">Key Improvements: Better Organization, Detailed Process Flows, Advanced Error Handling, Performance Optimization</text>
  
  <!-- System Info -->
  <text x="1000" y="2350" text-anchor="middle" style="fill: #1a237e; font-family: Arial, sans-serif; font-size: 12px; font-weight: bold;">Akudihatinya - Health Data Management System</text>
  <text x="1000" y="2370" text-anchor="middle" style="fill: #424242; font-family: Arial, sans-serif; font-size: 10px;">Framework: Laravel 11 | Authentication: Sanctum | Database: MySQL | Cache: Redis | Export: PDF/Excel | Architecture: Enhanced MVC + Service Layer</text>
</svg>